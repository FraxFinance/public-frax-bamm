{
    "assert_autofinder_success": true,
    "files": [
        "certora/harnesses/ERC20Like/DummyERC20A.sol",
        "certora/harnesses/ERC20Like/DummyERC20B.sol",
        //"certora/harnesses/ERC20Like/DummyERC20C.sol",
        //"certora/harnesses/ERC20Like/DummyWeth.sol",
        "node_modules/dev-fraxswap/src/contracts/core/FraxswapPair.sol",
        // "node_modules/dev-fraxswap/src/contracts/periphery/FraxswapRouterMultihop.sol",
        "src/contracts/factories/BAMMFactory.sol",
        "src/contracts/BAMMERC20.sol",
        "src/contracts/FraxswapDummyRouter.sol",
        "src/contracts/FraxswapOracle.sol",
        "src/contracts/VariableInterestRate.sol",
        "certora/harnesses/BAMMHarness.sol",
        //"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
    ],
    "java_args": [
    ],
    "parametric_contracts": [ "BAMMHarness" ],
    "link": [
        // "BAMMHarness:routerMultihop=FraxswapRouterMultihop",
        "BAMMHarness:routerMultihop=FraxswapDummyRouter",
        "BAMMHarness:fraxswapOracle=FraxswapOracle",
        "BAMMHarness:iBammErc20=BAMMERC20",
        "BAMMHarness:pair=FraxswapPair",
        "BAMMHarness:variableInterestRate=VariableInterestRate",
        "BAMMHarness:token0=DummyERC20A",
        "BAMMHarness:token1=DummyERC20B",
        "BAMMHarness:factory=BAMMFactory",

        "FraxswapPair:token0=DummyERC20A",
        "FraxswapPair:token1=DummyERC20B",
    ],
    "optimistic_fallback": true,
    "optimistic_loop": true,
    "packages": [
        "frax-std=node_modules/frax-standard-solidity/src",
        "@prb=node_modules/@prb",
        "forge-std=node_modules/forge-std/src",
        "solidity-bytes-utils=node_modules/solidity-bytes-utils",
        "solmate=node_modules/solmate",
        "ds-test=node_modules/ds-test/src",
        "@openzeppelin=node_modules/@openzeppelin",
        "dev-fraxswap=node_modules/dev-fraxswap",
        "@uniswap=node_modules/@uniswap"
    ],
    "process": "emv",
    //"coverage_info": "basic",
    //"prover_args": [
    //    "-recursionEntryLimit 2"
    //],
    	"prover_args": [
		//"-b 2",
		//"-optimisticFallback true",
		//"-assumeUnwindCond",
		"-recursionEntryLimit 2",
		"-split false",
		"-dontStopAtFirstSplitTimeout true",
		"-backendStrategy singleRace",
		"-smt_useLIA false",
		"-smt_useNIA true",
        " -s [z3:def{randomSeed=1},z3:def{randomSeed=2},z3:def{randomSeed=3},z3:def{randomSeed=4},z3:def{randomSeed=5},z3:def{randomSeed=6},z3:def{randomSeed=7},z3:def{randomSeed=8},z3:def{randomSeed=9},z3:def{randomSeed=10}]",
        "-smt_nonLinearArithmetic true -adaptiveSolverConfig false -depth 0"
        
	],
    "solc": "solc8.23",
    "solc_optimize": "1000",
    
    "solc_via_ir": false,
    "rule_sanity": "basic",
    "server": "production",
    //"prover_version": "master",
    "commit_sha1": "16acff0f546accaffd8f00776fce8fd8d69d8e64",   // version 7.19.0
    
    "loop_iter": "2",

    "verify": "BAMMHarness:certora/specs/BAMM.spec",
    "msg": "BAMM LI4",
    "smt_timeout":"7200"
    
}